pluginManagement {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/releases' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url "https://www.jitpack.io" }
        maven {
            url 'D:\\AndroidStudioProjects\\AndroidCommon\\AndroidCommon\\plugin\\build\\maven-repo'
        }
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        maven { url 'https://maven.aliyun.com/repository/releases' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url "https://www.jitpack.io" }
        google()
        mavenCentral()
        maven {
            url 'D:\\AndroidStudioProjects\\AndroidCommon\\AndroidCommon\\plugin\\build\\maven-repo'
        }
    }
}
rootProject.name = "My Application"
include ':app'
include ':modules:libGroovy'
include ':router-gradle-plugin'
//include ':plugin'
include ':router-annotations'
include ':router-processor'


gradle.addBuildListener(new BuildListener() {
    @Override
    void settingsEvaluated(Settings settings) {
        println "Initialization phase completed"
    }

    @Override
    void projectsLoaded(Gradle gradle) {
        println "During the configuration loading process"
    }

    @Override
    void projectsEvaluated(Gradle gradle) {
        gradle.rootProject.childProjects.each {
            name, p ->
                println "$name 111,$p"
        }
        println "configuration complete"
    }

    @Override
    void buildFinished(BuildResult buildResult) {
        println "End of construction"
    }
})
include ':plugin'
include ':router-processor'
include ':router-annotations'
include ':lib'
//打印本次构建执行的所有任务的名称
gradle.taskGraph.beforeTask {
    task-> println "qfhqfh task:${task.name}"
}